#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q  &kp W               &kp E           &kp R               &kp T                                  &kp Y            &kp U                &kp I            &kp O                &kp P
&kp A  &mt S LEFT_CONTROL  &mt D LEFT_ALT  &mt F LEFT_COMMAND  &kp G                                  &kp H            &mt J RIGHT_COMMAND  &mt K RIGHT_ALT  &mt L RIGHT_CONTROL  &kp SEMICOLON
&kp Z  &kp X               &kp C           &kp V               &kp B                                  &kp N            &kp M                &kp COMMA        &kp DOT              &kp SLASH
&mo 4  &mo 3               &mo 1           &lt 6 ESCAPE        &lt 2 ENTER  &lt 7 LA(TAB)  &kp SPACE  &lt 5 BACKSPACE                                                             &lt 1 RIGHT_SHIFT
            >;
        };

        nav {
            label = "NUM";
            bindings = <
&none   &none   &none   &none   &none                   &kp K_REDO  &kp K_PASTE     &kp K_COPY    &kp K_CUT       &kp K_UNDO
&none   &none   &none   &none   &none                   &kp CAPS    &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT
&none   &none   &none   &none   &none                   &kp INSERT  &kp HOME        &kp PG_UP     &kp PAGE_DOWN   &kp END
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO
&trans  &trans  &trans  &trans  &trans                  &trans      &mkp LCLK    &trans      &mkp RCLK  &mkp MCLK
&trans  &trans  &trans  &trans  &trans                  &trans      &trans       &trans      &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans
            >;

            label = "MOUSE";
        };

        number_layer {
            bindings = <
&trans  &trans     &trans    &trans    &trans                     &kp N1  &kp N2  &kp N3  &kp MINUS  &kp EQUAL
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT                  &kp N4  &kp N5  &kp N6  &kp GRAVE  &kp BSLH
&trans  &trans     &trans    &trans    &trans                     &kp N7  &kp N8  &kp N9  &kp FSLH   &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans  &kp N0                             &trans
            >;

            label = "NUM";
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &trans     &trans    &trans    &trans                    &kp F1   &kp F2  &kp F3  &kp F11  &kp F12
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT                 &kp F4   &kp F5  &kp F6  &trans   &trans
&trans  &trans     &trans    &trans    &trans                    &kp F7   &kp F8  &kp F9  &trans   &trans
&trans  &trans     &trans    &trans    &trans     &mo 8  &trans  &kp F10                           &trans
            >;
        };

        sym_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp EXCLAMATION    &kp AT_SIGN        &kp HASH         &kp DOLLAR         &trans
&trans  &trans  &trans  &trans  &trans                  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_BRACKET   &trans
&trans  &trans  &trans  &trans  &trans                  &kp SQT            &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                                    &trans
            >;

            label = "SYM";
        };

        snipe_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;

            label = "SNIPE";
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        reset {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &sys_reset
            >;

            label = "reset";
        };
    };
};
