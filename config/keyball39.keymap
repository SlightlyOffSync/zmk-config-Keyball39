#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        left_hmr_tap: left_hmr_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HMR_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 37 38 36>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };

        right_hmr_tap: right_hmr_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HMR_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <4 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <175>;
            hold-trigger-on-release;
        };

        sym_modifier_hold: sym_modifier_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "SYM_MODIFIER_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <(-1)>;
            flavor = "balanced";
            hold-trigger-key-positions = <22 23 32 33 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35 15>;
        };

        smart_num_tap: smart_num_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_NUM_TAP";
            bindings = <&num_word>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <175>;
            flavor = "tap-preferred";
        };

        smart_mouse_hold: smart_mouse_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_MOUSE_HOLD";
            bindings = <&smart_mouse>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <185>;
            require-prior-idle-ms = <175>;
        };

        smart_mouse: smart_mouse {
            compatible = "zmk,behavior-auto-layer";
            #binding-cells = <1>;
            continue-list = <LCLK RCLK UP_ARROW DOWN_ARROW>;
            ignore-modifiers;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        jump_word_left {
            bindings = <&kp RA(LEFT)>;
            key-positions = <16 17>;
            layers = <1>;
            require-prior-idle-ms = <150>;
        };

        jump_word_right {
            bindings = <&kp RA(RIGHT)>;
            key-positions = <17 18>;
            layers = <1>;
            require-prior-idle-ms = <150>;
            slow-release;
        };

        jump_line_right {
            bindings = <&kp RG(RIGHT)>;
            key-positions = <18 19>;
            layers = <1>;
            require-prior-idle-ms = <150>;
        };

        jump_line_left {
            bindings = <&kp RG(LEFT)>;
            key-positions = <15 16>;
            layers = <1>;
            require-prior-idle-ms = <150>;
        };

        left-bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
            layers = <0>;
        };

        right-paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
            layers = <0>;
        };

        left-bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
            layers = <0>;
        };

        right-bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q                       &kp W                  &kp E                     &kp R                     &kp T                                           &kp Y          &kp U                           &kp I                       &kp O                   &kp P
&left_hmr_tap LEFT_SHIFT A  &left_hmr_tap LCTRL S  &left_hmr_tap LEFT_ALT D  &left_hmr_tap LEFT_GUI F  &kp G                                           &kp H          &right_hmr_tap RIGHT_COMMAND J  &right_hmr_tap RIGHT_ALT K  &right_hmr_tap RCTRL L  &right_hmr_tap RIGHT_SHIFT SQT
&kp Z                       &kp X                  &kp C                     &kp V                     &kp B                                           &kp N          &kp M                           &cmqus                      &dtsmi                  &kp SLASH
&lt 1 GRAVE                 &kp DELETE             &lt 4 UNDERSCORE          &lt 6 ESCAPE              &lt 2 ENTER  &lt 7 TAB  &smart_num_tap 3 SPACE  &kp BACKSPACE                                                                                      &kp BACKSLASH
            >;
        };

        nav {
            label = "NAV";
            bindings = <
&none   &none      &none     &none     &none                      &none       &none           &none           &none          &none
&none   &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT                  &caps_word  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT
&none   &none      &none     &none     &none                      &kp INSERT  &kp HOME        &kp PAGE_DOWN   &kp PAGE_DOWN  &kp END
&trans  &trans     &trans    &trans    &trans     &trans  &trans  &trans                                                     &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                                     &trans     &trans     &msc SCRL_DOWN  &trans     &trans
&trans  &trans  &trans  &trans  &trans                                     &kp MINUS  &mkp LCLK  &msc SCRL_UP    &mkp RCLK  &mkp MCLK
&trans  &trans  &trans  &trans  &trans                                     &kp EQUAL  &trans     &trans          &trans     &trans
&trans  &trans  &trans  &to 0   &smart_mouse_hold 0 ENTER  &trans  &trans  &trans                                           &trans
            >;
        };

        numpad_layer {
            label = "NUM";
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N0                              &trans  &trans  &trans  &trans  &trans
&kp PLUS   &kp N4  &kp N5  &kp N6  &kp MINUS                           &trans  &trans  &trans  &trans  &trans
&trans     &kp N7  &kp N8  &kp N9  &kp EQUAL                           &trans  &trans  &trans  &trans  &trans
&trans     &trans  &kp N0  &to 0   &trans     &kp PERIOD  &lt 3 SPACE  &trans                          &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1      &kp F2     &kp F3  &kp F4  &kp F5                 &kp F6   &kp F7  &kp F8  &kp F9   &kp F10
&caps_word  &none      &none   &none   &none                  &none    &none   &none   &kp F11  &kp F12
&trans      &trans     &trans  &trans  &trans                 &none    &none   &none   &trans   &kp PRINTSCREEN
&trans      &kp GLOBE  &trans  &trans  &trans  &mo 8  &trans  &kp F10                           &trans
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp DOLLAR      &kp PERCENT                         &trans     &trans    &trans    &trans     &trans
&kp CARET        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE                     &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL  &trans
&kp AMPERSAND    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN   &kp GREATER_THAN                    &trans     &trans    &trans    &trans     &trans
&trans           &kp LESS_THAN         &kp GREATER_THAN       &kp ASTERISK    &kp UNDERSCORE    &kp PLUS  &trans  &trans                                    &trans
            >;
        };

        number-layer {
            label = "number";
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4    &kp N5                     &kp N6     &kp N7  &kp N8  &kp N9  &kp N0
&trans  &trans  &trans  &kp SEMI  &kp MINUS                  &kp EQUAL  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans                     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans     &trans  &trans  &trans                             &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        reset {
            label = "reset";
            bindings = <
&bt BT_NXT      &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &bootloader
            >;
        };
    };
};
